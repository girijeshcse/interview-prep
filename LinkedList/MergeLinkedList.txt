# assuming node class is defined
# node.next for singly linked list
# node.next and node.prev for doubly linked list


def merge_sorted_linkedlist(head1, head2):

    #corner cases

    if head1 is None:
        return head2 #list1 is not there

    if head2 is None:
        return head1 # ask

    ll3_head = None

    if head1.val <= head2.val:
        ll3_head = head1
        head1 = head1.next
    else: 
        ll3_head = head2
        head2 = head2.next

    ll3_tail = ll3_head

    while head1 and head2:
        temp = None

        if head1.val <= head2.val:
            temp = head1
            head1 = head1.next
        else:
            temp = head2
            head2 = head2.next
        
        ll3_tail.next = temp
        ll3_tail = temp


    if head1:
        ll3_tail.next = head1
    elif head2:
        ll3_tail.next = head2