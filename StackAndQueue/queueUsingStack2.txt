# imports

class qUsingStack2:
    def _init__(self):
        self.s1 = []
        self.s2 = []

    def enqueue(self, val):

        while len(self.s1) !=0:
            temp = self.s1[-1]
            self.s1.pop()
            self.s2.append(temp)
        
        self.s1.append(val)

        while len(self.s2) != 0:
            temp = self.s2[-1]
            self.s2.pop()
            self.s1.append(temp)


    def is_empty():
        return len(self.s1) + len(self.s2) == 0

    def dequeue(self):
        if is_empty():
            return -1

        temp_val = self.s1[-1]
        self.s1.pop()
        return temp_val